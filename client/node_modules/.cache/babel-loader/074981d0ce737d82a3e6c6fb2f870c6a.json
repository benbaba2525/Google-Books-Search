{"ast":null,"code":"import _defineProperty from \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ben/Desktop/Class-HW/Google-Books-Search/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { BookList, BookListItem } from \"../components/List\";\nimport { Input, SearchButton } from \"../components/Input\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      bookSearch: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      // When the form is submitted, prevent its default behavior, get book update the books state\n      event.preventDefault(); // calls googlebooks api and returns searched book when search button is clicked\n\n      API.searchBooks(_this.state.bookSearch).then(function (res) {\n        _this.setState({\n          books: res.data.items\n        }, function () {\n          console.log(this.state.books);\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"xs-12 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"bookSearch\",\n        value: this.state.bookSearch,\n        onChange: this.handleInputChange,\n        placeholder: \"Search for a Book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"xs-12 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(SearchButton, {\n        onClick: this.handleFormSubmit,\n        type: \"success\",\n        className: \"input-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Search\"))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(BookList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(BookListItem, {\n          key: book.id,\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          link: book.volumeInfo.infoLink,\n          description: book.volumeInfo.description // if no imageLinks then use placeholder image\n          ,\n          image: book.volumeInfo.imageLinks === undefined ? \"http://siddallheatingandcooling.net/_imgstore/5/1360415/thumbnail/FSeY96wEdX_eY4XkBN2jfYnuY9A.png\" : \"\".concat(book.volumeInfo.imageLinks.thumbnail),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\n;\nexport default Search;","map":{"version":3,"sources":["/Users/ben/Desktop/Class-HW/Google-Books-Search/client/src/pages/Search.js"],"names":["React","Component","API","Container","Row","Col","BookList","BookListItem","Input","SearchButton","Search","state","books","bookSearch","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","searchBooks","then","res","data","items","console","log","catch","err","map","book","id","volumeInfo","title","authors","infoLink","description","imageLinks","undefined","thumbnail"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,oBAApC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,oBAAvC;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,qBAApC;;IAEMC,M;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,UAAU,EAAE;AAFR,K;;UAKRC,iB,GAAoB,UAAAC,KAAK,EAAI;AACzB;AACA;AAFyB,0BAGDA,KAAK,CAACC,MAHL;AAAA,UAGjBC,IAHiB,iBAGjBA,IAHiB;AAAA,UAGXC,KAHW,iBAGXA,KAHW;;AAIzB,YAAKC,QAAL,qBAAiBF,IAAjB,EAAwBC,KAAxB;AACH,K;;UAEDE,gB,GAAmB,UAAAL,KAAK,EAAI;AACxB;AACAA,MAAAA,KAAK,CAACM,cAAN,GAFwB,CAIxB;;AACAnB,MAAAA,GAAG,CAACoB,WAAJ,CAAgB,MAAKX,KAAL,CAAWE,UAA3B,EACKU,IADL,CACU,UAAAC,GAAG,EAAI;AACT,cAAKL,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEY,GAAG,CAACC,IAAJ,CAASC;AAAlB,SAAd,EAAyC,YAAY;AACjDC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,KAAvB;AACH,SAFD;AAGH,OALL,EAMKiB,KANL,CAMW,UAAAC,GAAG;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,OANd;AAOH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,YADT;AAEI,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,UAFtB;AAGI,QAAA,QAAQ,EAAE,KAAKC,iBAHnB;AAII,QAAA,WAAW,EAAC,mBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EAWI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AACI,QAAA,OAAO,EAAE,KAAKM,gBADlB;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CAXJ,CADJ,CADJ,CADJ,CADJ,EA8BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKT,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AAC1B,eACI,oBAAC,YAAD;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,UAAA,KAAK,EAAED,IAAI,CAACE,UAAL,CAAgBC,KAF3B;AAGI,UAAA,OAAO,EAAEH,IAAI,CAACE,UAAL,CAAgBE,OAH7B;AAII,UAAA,IAAI,EAAEJ,IAAI,CAACE,UAAL,CAAgBG,QAJ1B;AAKI,UAAA,WAAW,EAAEL,IAAI,CAACE,UAAL,CAAgBI,WALjC,CAMI;AANJ;AAOI,UAAA,KAAK,EAAEN,IAAI,CAACE,UAAL,CAAgBK,UAAhB,KAA+BC,SAA/B,GAA2C,mGAA3C,aAAoJR,IAAI,CAACE,UAAL,CAAgBK,UAAhB,CAA2BE,SAA/K,CAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,OAXA,CADL,CADJ,CADJ,CA9BJ,CADJ,CADJ;AAqDH;;;;EAnFgBxC,S;;AAqFpB;AAED,eAAeS,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { BookList, BookListItem } from \"../components/List\";\nimport { Input, SearchButton } from \"../components/Input\";\n\nclass Search extends Component {\n\n    // instatiate state for list of books retrieved from googlebooks api and bookSearch value\n    state = {\n        books: [],\n        bookSearch: \"\"\n    };\n\n    handleInputChange = event => {\n        // Destructure the name and value properties off of event.target\n        // Update the appropriate state\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    };\n\n    handleFormSubmit = event => {\n        // When the form is submitted, prevent its default behavior, get book update the books state\n        event.preventDefault();\n\n        // calls googlebooks api and returns searched book when search button is clicked\n        API.searchBooks(this.state.bookSearch)\n            .then(res => {\n                this.setState({ books: res.data.items }, function () {\n                    console.log(this.state.books);\n                })\n            })\n            .catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <form>\n                                <Container>\n                                    <Row>\n                                        <Col size=\"xs-12 sm-12\">\n                                            <Input\n                                                name=\"bookSearch\"\n                                                value={this.state.bookSearch}\n                                                onChange={this.handleInputChange}\n                                                placeholder=\"Search for a Book\"\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col size=\"xs-12 sm-12\">\n                                            <SearchButton\n                                                onClick={this.handleFormSubmit}\n                                                type=\"success\"\n                                                className=\"input-lg\"\n                                            >\n                                                Search\n                                            </SearchButton>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            <BookList>\n                                {this.state.books.map(book => {\n                                    return (\n                                        <BookListItem\n                                            key={book.id}\n                                            title={book.volumeInfo.title}\n                                            authors={book.volumeInfo.authors}\n                                            link={book.volumeInfo.infoLink}\n                                            description={book.volumeInfo.description}\n                                            // if no imageLinks then use placeholder image\n                                            image={book.volumeInfo.imageLinks === undefined ? \"http://siddallheatingandcooling.net/_imgstore/5/1360415/thumbnail/FSeY96wEdX_eY4XkBN2jfYnuY9A.png\" : `${book.volumeInfo.imageLinks.thumbnail}`}\n                                        />);\n                                })}\n                            </BookList>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    };\n\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}